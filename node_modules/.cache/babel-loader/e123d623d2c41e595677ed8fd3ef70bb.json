{"ast":null,"code":"import _asyncToGenerator from\"/Users/abasic/react/apps/food-order-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/abasic/react/apps/food-order-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/abasic/react/apps/food-order-app/node_modules/@babel/runtime/regenerator/index.js\";import{useEffect,useState}from\"react\";import Card from\"../UI/Card\";import MealItem from\"./MealItem/MealItem\";import classes from\"./AvailableMeals.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AvailableMeals=function AvailableMeals(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),meals=_useState2[0],setMeals=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),simulate=_useState8[0],setSimulate=_useState8[1];var firebaseUrl=\"https://test-ecce5-default-rtdb.firebaseio.com/meals.json\";if(simulate){firebaseUrl=\"\";console.log(\"simulate\");}useEffect(function(){var fetchMeals=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,responseData,loadedMeals,key;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(firebaseUrl);case 2:response=_context.sent;if(response.ok){_context.next=5;break;}throw new Error(\"Something went wrong\");case 5:_context.next=7;return response.json();case 7:responseData=_context.sent;loadedMeals=[];for(key in responseData){loadedMeals.push({id:key,name:responseData[key].name,description:responseData[key].description,price:responseData[key].price});}setMeals(loadedMeals);setIsLoading(false);case 12:case\"end\":return _context.stop();}}},_callee);}));return function fetchMeals(){return _ref.apply(this,arguments);};}();// We can't use try/catch here since this we are getting a promise.\n// We could use await for fetchmeals but we would have to create it in a seperate function\nfetchMeals().catch(function(error){setIsLoading(false);setError(error.message);});},[firebaseUrl]);if(isLoading){return/*#__PURE__*/_jsx(\"section\",{className:classes.MealsLoading,children:\"Loading...\"});}if(error){return/*#__PURE__*/_jsx(\"section\",{className:classes.MealsError,children:error});}var mealsList=meals.map(function(meal){return/*#__PURE__*/_jsx(MealItem,{id:meal.id,name:meal.name,description:meal.description,price:meal.price},meal.id);});if(simulate){firebaseUrl=\"\";console.log(\"simulate\");}var simulateHandler=function simulateHandler(){if(!simulate){setSimulate(true);}if(simulate){setSimulate(false);}};return/*#__PURE__*/_jsx(\"section\",{className:classes.meals,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(\"ul\",{children:mealsList}),/*#__PURE__*/_jsx(\"button\",{onClick:simulateHandler,className:classes.button,children:\"Simulate http error\"})]})});};export default AvailableMeals;","map":{"version":3,"sources":["/Users/abasic/react/apps/food-order-app/src/components/Meals/AvailableMeals.js"],"names":["useEffect","useState","Card","MealItem","classes","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","simulate","setSimulate","firebaseUrl","console","log","fetchMeals","fetch","response","ok","Error","json","responseData","loadedMeals","key","push","id","name","description","price","catch","message","MealsLoading","MealsError","mealsList","map","meal","simulateHandler","button"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState();\n  const [simulate, setSimulate] = useState(null);\n\n  let firebaseUrl = \"https://test-ecce5-default-rtdb.firebaseio.com/meals.json\";\n\n  if (simulate) {\n    firebaseUrl = \"\";\n    console.log(\"simulate\");\n  }\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(firebaseUrl);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const responseData = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    // We can't use try/catch here since this we are getting a promise.\n    // We could use await for fetchmeals but we would have to create it in a seperate function\n    fetchMeals().catch((error) => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n  }, [firebaseUrl]);\n\n  if (isLoading) {\n    return <section className={classes.MealsLoading}>Loading...</section>;\n  }\n  if (error) {\n    return <section className={classes.MealsError}>{error}</section>;\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  if (simulate) {\n    firebaseUrl = \"\";\n    console.log(\"simulate\");\n  }\n\n  const simulateHandler = () => {\n    if (!simulate) {\n      setSimulate(true);\n    }\n    if (simulate) {\n      setSimulate(false);\n    }\n  };\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n        <button onClick={simulateHandler} className={classes.button}>\n          Simulate http error\n        </button>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}