{"ast":null,"code":"var _jsxFileName = \"/Users/abasic/react/apps/food-order-app/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst CartReducer = (state, action) => {\n  if (action.type === \"ADD_CART_ITEM\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\n_c = CartReducer;\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(CartReducer, defaultCartState);\n\n  const addItemToCart = item => {\n    dispatchCartAction({\n      type: \"ADD_CART_ITEM\",\n      item: item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE_CART_ITEM\",\n      id: id\n    });\n  };\n\n  const cartContextHelper = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContextHelper,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c2 = CartProvider;\nexport default CartProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CartReducer\");\n$RefreshReg$(_c2, \"CartProvider\");","map":{"version":3,"sources":["/Users/abasic/react/apps/food-order-app/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","CartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCart","removeItemFromCart","cartContextHelper","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,eAApB,EAAqC;AACnC,UAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADtD;AAEA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAC3BJ,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EADN,CAA9B;AAGA,UAAMC,YAAY,GAAGV,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAmBV,MAAM,CAACG,IAA1B,CAArB;AACA,WAAO;AACLP,MAAAA,KAAK,EAAEa,YADF;AAELZ,MAAAA,WAAW,EAAEK;AAFR,KAAP;AAID;;AACD,SAAOP,gBAAP;AACD,CAdD;;KAAMG,W;;AAgBN,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCrB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAMoB,aAAa,GAAIZ,IAAD,IAAU;AAC9BW,IAAAA,kBAAkB,CAAC;AAAEb,MAAAA,IAAI,EAAE,eAAR;AAAyBE,MAAAA,IAAI,EAAEA;AAA/B,KAAD,CAAlB;AACD,GAFD;;AAGA,QAAMa,kBAAkB,GAAIR,EAAD,IAAQ;AACjCM,IAAAA,kBAAkB,CAAC;AAAEb,MAAAA,IAAI,EAAE,kBAAR;AAA4BO,MAAAA,EAAE,EAAEA;AAAhC,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMS,iBAAiB,GAAG;AACxBrB,IAAAA,KAAK,EAAEiB,SAAS,CAACjB,KADO;AAExBC,IAAAA,WAAW,EAAEgB,SAAS,CAAChB,WAFC;AAGxBqB,IAAAA,OAAO,EAAEH,aAHe;AAIxBI,IAAAA,UAAU,EAAEH;AAJY,GAA1B;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,iBAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBD;;GAAMT,Y;;MAAAA,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst CartReducer = (state, action) => {\n  if (action.type === \"ADD_CART_ITEM\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    CartReducer,\n    defaultCartState\n  );\n\n  const addItemToCart = (item) => {\n    dispatchCartAction({ type: \"ADD_CART_ITEM\", item: item });\n  };\n  const removeItemFromCart = (id) => {\n    dispatchCartAction({ type: \"REMOVE_CART_ITEM\", id: id });\n  };\n\n  const cartContextHelper = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart,\n  };\n\n  return (\n    <CartContext.Provider value={cartContextHelper}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}