{"ast":null,"code":"var _jsxFileName = \"/Users/abasic/react/apps/food-order-app/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState();\n  const [simulate, setSimulate] = useState(null);\n  let firebaseUrl = \"https://test-ecce5-default-rtdb.firebaseio.com/meals.json\";\n\n  if (simulate) {\n    firebaseUrl = \"\";\n    console.log(\"simulate\");\n  }\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(firebaseUrl);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    }; // We can't use try/catch here since this we are getting a promise.\n    // We could use await for fetchmeals but we would have to create it in a seperate function\n\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n  }, [firebaseUrl]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: simulateHandler,\n        className: classes.button,\n        children: \"Simulate http error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this));\n\n  if (simulate) {\n    firebaseUrl = \"\";\n    console.log(\"simulate\");\n  }\n\n  const simulateHandler = () => {\n    if (!simulate) {\n      setSimulate(true);\n    }\n\n    if (simulate) {\n      setSimulate(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: simulateHandler,\n        className: classes.button,\n        children: \"Simulate http error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"mRNSxEmpxI0yVezRFLr19z2xvNQ=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/Users/abasic/react/apps/food-order-app/src/components/Meals/AvailableMeals.js"],"names":["useEffect","useState","Card","MealItem","classes","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","simulate","setSimulate","firebaseUrl","console","log","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","message","MealsLoading","MealsError","simulateHandler","button","mealsList","map","meal"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState();\n  const [simulate, setSimulate] = useState(null);\n\n  let firebaseUrl = \"https://test-ecce5-default-rtdb.firebaseio.com/meals.json\";\n\n  if (simulate) {\n    firebaseUrl = \"\";\n    console.log(\"simulate\");\n  }\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(firebaseUrl);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const responseData = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price,\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    // We can't use try/catch here since this we are getting a promise.\n    // We could use await for fetchmeals but we would have to create it in a seperate function\n    fetchMeals().catch((error) => {\n      setIsLoading(false);\n      setError(error.message);\n    });\n  }, [firebaseUrl]);\n\n  if (isLoading) {\n    return <section className={classes.MealsLoading}>Loading...</section>;\n  }\n  if (error) {\n    return (\n      <section className={classes.MealsError}>\n        <div>{error} </div>\n        <button onClick={simulateHandler} className={classes.button}>\n          Simulate http error\n        </button>\n      </section>\n    );\n  }\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      id={meal.id}\n      key={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  if (simulate) {\n    firebaseUrl = \"\";\n    console.log(\"simulate\");\n  }\n\n  const simulateHandler = () => {\n    if (!simulate) {\n      setSimulate(true);\n    }\n    if (simulate) {\n      setSimulate(false);\n    }\n  };\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n        <button onClick={simulateHandler} className={classes.button}>\n          Simulate http error\n        </button>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}